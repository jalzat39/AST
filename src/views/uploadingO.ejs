<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>AST</title>
    <link rel="stylesheet" href="https://bootswatch.com/4/lux/bootstrap.min.css">
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <a class="navbar-brand" href="/gps">Map</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <a class="navbar-brand" href="/city">City</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <a class="navbar-brand" href="/upload">Input</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <a class="navbar-brand" href="/uploadO">Output</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/logout">LogOut</a>
                </li>           
            </ul>
        </div>
        </nav>

  <div class="container">
      <%if (signinMessage.length > 0) {%>
          <div class="alert alert-danger"><%= signinMessage %></div>
      <% } %>
      <%if (signupMessage.length > 0) {%>
          <div class="alert alert-danger"><%= signupMessage %></div>
      <% } %>
  </div>

  <div class="row">
        <div class="col-md-4 offset-md-4">
            <div class="card">
                <div class="card-header text-center">
                    <h3>Elija el documento que desea analizar</h3>
                </div>
                <div class="card-body">
                        <form action='/uplO' method="POST" enctype="multipart/form-data">
                            <input type="file" name="file">
                        </form>
                        
                </div>
                <form class="form-inline justify-content-center" >
                    <input type="button" class="btn btn-primary mt-4" value="Analizar" onclick="charts()">
                </form>
                </div>
                <div>
                        <style> /* set the CSS */

                                .bar { fill: steelblue; }
                                
                        </style>
                    <script src="https://d3js.org/d3.v5.js"> import {scaleLinear} from "d3-scale";</script>
                    <h4 id="emisiones" class="row display-7 text-center" style="display: none;">Emisiones</h4>
                    <svg width="600" height="600"></svg>
                    <rect></rect>
                    <script>
                        function charts(){
                            document.getElementById("emisiones").style.display = "block";
                            var svg = d3.select("svg"),
                            margin = 200,
                            width = svg.attr("width") - margin,
                            height = svg.attr("height") - margin;
                            
                            var g = svg.append("g")
                            .attr("transform", "translate(" + 100 + "," + 100 + ")");

                            var dataX = [1, 2, 3, 4],
                            dataY = [3000, 4000, 1000, 500];

                            var xscale = d3.scaleLinear()
                            .domain([0, d3.max(dataX)])
                            .range([0, width - 100]);                                
                            
                            var yscale = d3.scaleLinear()
                            .domain([0, d3.max(dataY)])
                            .range([height/2, 0]);

                            var x_axis = d3.axisBottom()
                            .scale(xscale);

                            var y_axis = d3.axisLeft()
                                    .scale(yscale);

                                svg.append("g")
                                .attr("transform", "translate(50, 10)")
                                .call(y_axis);

                            var xAxisTranslate = height/2 + 10;

                                svg.append("g")
                                .attr("transform", "translate(50, " + xAxisTranslate  +")")
                                .call(x_axis)                    
                            g.selectAll(".bar")
                            .data(data)
                            .enter().append("rect")
                            .attr("class", "bar")
                            attr("x", function(d) { return xScale(d.dataX); })
                            .attr("y", function(d) { return yScale(d.dataY); })
                            .attr("width", xScale.bandwidth())
                            .attr("height", function(d) { return height - yScale(d.dataY); }); 
   
                        } 
                    </script>
                </div>
            </div>
        </div>
    </div>
</html>